# name: Prod Deploy to Databricks

# on:
#   workflow_dispatch:
#     inputs:
#       env:
#         description: 'Deployment environment (dev, staging, prod)'
#         required: true
#         default: 'dev'
#   # push:
#   #   branches:
#   #     - main

# jobs:
#   validate:
#     name: "Prod Validate Databricks Bundle"
#     runs-on: ubuntu-latest

#     steps:
#       - uses: actions/checkout@v3
    
#       - name: Setup Databricks CLI
#         uses: databricks/setup-cli@main
      
#       - name: Validate Databricks bundle
#         run: |
#           cd dab_trips
#           ENV="${{ github.event.inputs.env || 'dev' }}"
#           echo "Environment: $ENV"
#           databricks bundle validate --target=prod
#         env:
#           DATABRICKS_BUNDLE_ENV: prod
#           DATABRICKS_HOST: ${{ secrets.PROD_DATABRICKS_HOST }}
#           DATABRICKS_CLIENT_ID: ${{ secrets.DATABRICKS_CLIENT_ID }}
#           DATABRICKS_CLIENT_SECRET: ${{ secrets.DATABRICKS_CLIENT_SECRET }}
#   deploy:
#     name: Deploy to Prod Databricks
#     runs-on: ubuntu-latest
#     needs: validate
#     if: needs.validate.result == 'success'

#     steps:
#       - name: Checkout code
#         uses: actions/checkout@v3

#       - name: Set up Python
#         uses: actions/setup-python@v2
#         with:
#           python-version: '3.13'

#       - name: Install dependencies
#         run: |
#           cd dab_trips
#           pip install -r requirements-dev.txt

#       - name: Setup Databricks CLI
#         uses: databricks/setup-cli@main

#       - name: Deploy the Databricks Asset Bundle
#         run: |
#           cd dab_trips
#           ENV="${{ github.event.inputs.env || 'dev' }}"
#           echo "Environment: $ENV"
#           databricks bundle deploy --target=prod --auto-approve
#         env:
#           DATABRICKS_BUNDLE_ENV: prod
#           DATABRICKS_HOST: ${{ secrets.PROD_DATABRICKS_HOST }}
#           DATABRICKS_CLIENT_ID: ${{ secrets.DATABRICKS_CLIENT_ID }}
#           DATABRICKS_CLIENT_SECRET: ${{ secrets.DATABRICKS_CLIENT_SECRET }}
